{"version":3,"sources":["components/Header.js","components/Navigation.js","components/Option.js","components/Select.js","components/Main.js","router/App.js","index.js"],"names":["Header","className","Navigation","to","Option","props","onClick","click","country","Country","Select","state","size","handleClick","setState","active","handleOnMouseDown","this","options","countries","map","key","CountryCode","clik","onMouseDown","onChange","handleChange","Component","Main","data","Global","TotalConfirmed","TotalRecovered","TotalDeaths","actualCountry","isLoaded","createMain","type","labels","datasets","backgroundColor","borderColor","borderWidth","width","height","title","display","text","padding","fontStyle","fontSize","legend","Countries","e","console","log","target","value","filter","App","fetchData","fetch","then","response","json","basename","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ef19f1b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { RiVirusLine } from \"react-icons/ri\";\r\nimport \"../styles/Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div>\r\n        <RiVirusLine className=\"virusIcon\" />\r\n      </div>\r\n      <h1>COVID-19 API</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GoGlobe, GoLocation } from \"react-icons/go\";\r\nimport \"../styles/Navigation.css\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav>\r\n      <Link to=\"/global\">\r\n        <GoGlobe />\r\n      </Link>\r\n      <Link to=\"/location\">\r\n        <GoLocation />\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"../styles/Option.css\";\r\n\r\nconst Option = (props) => {\r\nreturn <option onClick={props.click}>{props.country.Country}</option>;\r\n};\r\n\r\nexport default Option;\r\n","import React, {Component} from \"react\";\r\nimport Option from \"./Option\";\r\nimport \"../styles/Select.css\";\r\n\r\nclass Select extends Component {\r\n  state = {\r\n    size: 1,\r\n  }\r\n\r\n  handleClick = () => {\r\n    if(this.state.size === 1) this.setState({\r\n      active: 4,\r\n    }); else this.setState({\r\n      active: 1,\r\n    })  \r\n  }\r\n\r\n  handleOnMouseDown = () => {\r\n    if(this.state.size === 1) this.setState({\r\n      active: 4,\r\n    }); \r\n  }\r\n\r\n  render(){\r\n    const {size} = this.state; \r\n    \r\n    const options = this.props.countries.map(country => <Option key={country.CountryCode} country={country} clik={this.handleClick}/>)\r\n\r\n    return (\r\n        <select onMouseDown={this.handleOnMouseDown} onClick={this.handleClick} onChange={this.props.handleChange} size={size}>\r\n          {options}\r\n        </select>\r\n    );\r\n  }\r\n  \r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Select from \"./Select\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport \"../styles/Main.css\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    data: {\r\n      Global: {\r\n        TotalConfirmed: 0,\r\n        TotalRecovered: 0,\r\n        TotalDeaths: 0,\r\n      },\r\n      actualCountry: {\r\n        Country: \"\",\r\n        TotalConfirmed: 0,\r\n        TotalRecovered: 0,\r\n        TotalDeaths: 0,\r\n      },\r\n    },\r\n    isLoaded: false,\r\n  };\r\n  \r\n  createMain = (data) => {\r\n    if(this.props.type === \"global\"){\r\n      return (\r\n        <main>\r\n          <Bar\r\n            data={{\r\n              labels: [\"Confirmed\", \"Recovered\", \"Deaths\"],\r\n              datasets: [\r\n                {\r\n                  data: [\r\n                    data.Global.TotalConfirmed,\r\n                    data.Global.TotalRecovered,\r\n                    data.Global.TotalDeaths,\r\n                  ],\r\n                  backgroundColor: [\r\n                    \"rgba(255, 0, 0, 0.5)\",\r\n                    \"rgba(59, 178, 226, 0.5)\",\r\n                    \"rgba(0, 0, 0, 0.5)\",\r\n                  ],\r\n                  borderColor: [\r\n                    \"rgb(255, 0, 0)\",\r\n                    \"rgb(59, 178, 226)\",\r\n                    \"rgb(0, 0, 0)\",\r\n                  ],\r\n                  borderWidth: 1,\r\n                },\r\n              ],\r\n            }}\r\n            width={40}\r\n            height={50}\r\n            options={{\r\n              title: {\r\n                display: true,\r\n                text: \"Global Data\",\r\n                padding: 20,\r\n                fontStyle: \"normal\",\r\n                fontSize: 20,\r\n              },\r\n              legend: {\r\n                display: false,\r\n              },\r\n            }}\r\n          />\r\n        </main>\r\n      );\r\n    } else if(this.props.type === \"location\"){\r\n      return (\r\n        <main>\r\n          <Select handleChange={this.handleChange} countries={this.props.data.Countries}/>\r\n          <Bar\r\n            data={{\r\n              labels: [\"Confirmed\", \"Recovered\", \"Deaths\"],\r\n              datasets: [\r\n                {\r\n                  data: [\r\n                    data.actualCountry.TotalConfirmed,\r\n                    data.actualCountry.TotalRecovered,\r\n                    data.actualCountry.TotalDeaths,\r\n                  ],\r\n                  backgroundColor: [\r\n                    \"rgba(255, 0, 0, 0.5)\",\r\n                    \"rgba(59, 178, 226, 0.5)\",\r\n                    \"rgba(0, 0, 0, 0.5)\",\r\n                  ],\r\n                  borderColor: [\r\n                    \"rgb(255, 0, 0)\",\r\n                    \"rgb(59, 178, 226)\",\r\n                    \"rgb(0, 0, 0)\",\r\n                  ],\r\n                  borderWidth: 1,\r\n                },\r\n              ],\r\n            }}\r\n            width={40}\r\n            height={50}\r\n            options={{\r\n              title: {\r\n                display: true,\r\n                text: `${data.actualCountry.Country}`,\r\n                padding: 20,\r\n                fontStyle: \"normal\",\r\n                fontSize: 20,\r\n              },\r\n              legend: {\r\n                display: false,\r\n              },\r\n            }}\r\n          />\r\n        </main>\r\n      );\r\n    }\r\n  }  \r\n\r\n  componentDidMount(){\r\n    const {data} = this.props;\r\n\r\n    this.setState({\r\n      data: {\r\n        Global : data.Global,\r\n        actualCountry: data.Countries[0],\r\n      },\r\n      isLoaded: true,\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    console.log(e.target.value);\r\n    console.log(this.props.data.Countries);\r\n\r\n    const country = this.props.data.Countries.filter(country => country.Country === e.target.value)[0];\r\n\r\n    console.log(country.Country);\r\n\r\n    const actualCountry = {\r\n      Country: country.Country,\r\n      TotalConfirmed: country.TotalConfirmed,\r\n      TotalRecovered: country.TotalRecovered,\r\n      TotalDeaths: country.TotalDeaths,\r\n    }\r\n\r\n    this.setState({\r\n      data: {\r\n        actualCountry,\r\n      }\r\n      \r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { data, isLoaded } = this.state;\r\n\r\n  return (\r\n    <>\r\n      {isLoaded ? this.createMain(data) : null} \r\n    </>\r\n  )\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport Main from \"../components/Main\";\r\nimport \"../styles/App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: {\r\n      isLoaded: false,\r\n    },\r\n  };\r\n\r\n  fetchData = () => {\r\n    fetch(\"https://api.covid19api.com/summary\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          data,\r\n          isLoaded: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    const { data, isLoaded } = this.state;\r\n\r\n    return (\r\n      <HashRouter basename={'/'}>\r\n        <div className=\"app\">\r\n          <Header />\r\n          <Navigation />\r\n          {isLoaded ? (\r\n            <Switch>\r\n              <Route\r\n                path=\"/\"\r\n                exact\r\n                component={() => (\r\n                  <main>\r\n                    <h1>Select an option...</h1>\r\n                  </main>\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/global\"\r\n                component={() => <Main data={data} type=\"global\" />}\r\n              />\r\n              <Route\r\n                path=\"/location\"\r\n                component={() => (\r\n                  <Main data={data} type=\"location\" />\r\n                )}\r\n              />\r\n              <Route\r\n                component={() => (\r\n                  <main>\r\n                    <h1>This page doesn't exist</h1>\r\n                  </main>\r\n                )}\r\n              />\r\n            </Switch>\r\n          ) : null}\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./router/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}